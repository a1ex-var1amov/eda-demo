- name: Respond to Sensitive File Read
  hosts: localhost
  tasks:
    - name: Show All Available Variables (For Debugging)
      debug:
        var: vars

    - name: Display Environment Variables (to check KUBECONFIG)
      ansible.builtin.command: env
      register: env_output
      changed_when: false

    - name: Show Environment Variables
      debug:
        var: env_output.stdout_lines

    - name: Display Kubernetes API Server Details
      community.kubernetes.k8s_info:
        api_version: v1
        kind: ConfigMap
        name: "kube-root-ca.crt"
        namespace: "default"
      register: k8s_config

    - name: Show Kubernetes Configuration
      debug:
        msg: |
          Kubernetes Configuration:
          - Cluster API Endpoint: {{ k8s_config.resources[0].data['ca.crt'] | default('Not Found') }}

    - name: Notify Security Team
      debug:
        msg: "ALERT: Sensitive file read detected on {{ ansible_eda.event.payload.hostname }}. Investigate immediately."

    - name: Capture pod details for investigation
      community.kubernetes.k8s_info:
        api_version: v1
        kind: Pod
        name: "{{ ansible_eda.event.payload.output_fields['k8s.pod.name'] | default('suspicious-pod') }}"
        namespace: "{{ ansible_eda.event.payload.output_fields['k8s.ns.name'] | default('eda') }}"
      register: pod_details

    - name: Display pod details
      debug:
        var: pod_details

    - name: Log details for further analysis
      debug:
        msg: |
          POD DETAILS:
          - Pod Name: {{ pod_details.resources[0].metadata.name }}
          - Namespace: {{ pod_details.resources[0].metadata.namespace }}
          - Node: {{ pod_details.resources[0].spec.nodeName }}
          - Containers: {{ pod_details.resources[0].spec.containers | map(attribute='name') | list | join(', ') }}

    - name: Create Cilium Network Policy to Isolate Pod
      community.kubernetes.k8s:
        api_version: "cilium.io/v2"
        kind: CiliumNetworkPolicy
        resource_definition: |
          apiVersion: "cilium.io/v2"
          kind: CiliumNetworkPolicy
          metadata:
            name: "isolate-{{ pod_details.resources[0].metadata.name }}"
            namespace: "{{ ansible_eda.event.payload.output_fields['k8s.ns.name'] | default('eda') }}"
          spec:
            endpointSelector:
              matchLabels:
                "k8s-app": "{{ pod_details.resources[0].metadata.labels['k8s-app'] | default('suspicious-app') }}"
            ingress:
              - {}
            egress:
              - {}
        state: present


    - name: Reset Network Connections for Affected Pod
      community.kubernetes.k8s_exec:
        api_version: v1
        kind: Pod
        namespace: "{{ ansible_eda.event.payload.output_fields['k8s.ns.name'] | default('eda') }}"
        name: "{{ pod_details.resources[0].metadata.name }}"
        command: "kill -HUP 1"  # Soft reset to trigger network reconnection
      ignore_errors: true  # Prevent the playbook from failing if the command isn't available

    - name: Alert with pod details
      debug:
        msg: "Pod {{ ansible_eda.event.payload.output_fields['k8s.pod.name'] }} in namespace {{ ansible_eda.event.payload.output_fields['k8s.ns.name'] }} is suspected of unauthorized access. Network connections have been reset."

